stages:
  - check
  - lint
  - test
  - build
  - pages

check:
  stage: check
  # image: rust:latest
  image: rustlang/rust:nightly
  before_script:
    - rustup component add rustfmt-preview
    - rustc --version
    - cargo --version
    - rustfmt --version
  script:
    - make format
  except:
    - tags

lint:
  stage: lint
  # image: rust:latest
  image: rustlang/rust:nightly
  before_script:
    - rustc --version
    - cargo --version
    - cargo install clippy
    - cargo clippy -- --version
  script:
    - make lint
  except:
    - tags

test:
  stage: test
  image: rust:latest
  variables:
    KCOV_DISCARD_CACHE: "false"
    APT_CACHE_DIR: apt-cache
  before_script:
    - mkdir -pv $APT_CACHE_DIR && apt-get -qq update
    - apt-get -qq -o dir::cache::archives="$APT_CACHE_DIR" install -y
      binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev
      cmake
    - ./tools/build-kcov
    - rustc --version
    - cargo --version
    - ./tools/kcov/bin/kcov --version
  script:
    - make coverage
  after_script:
    - cat target/coverage/index.json
  cache:
    untracked: true
    paths:
      - apt-cache
      - tools/kcov
  except:
    - tags

build:
  stage: build
  image: rust:latest
  before_script:
    - rustc --version
    - cargo --version
  script:
    - make build
  cache:
    untracked: true
  only:
    - tags

pages:
  stage: pages
  # image: rust:latest
  image: rustlang/rust:nightly
  before_script:
    - rustc --version
    - cargo --version
    - rustdoc --version
  script:
    - make doc
    - mkdir public
    - cp -R target/doc/* public/
    - cd public/ && ln -s 20min/index.html .
  artifacts:
    untracked: true
    paths:
      - public
  only:
    - master
